#!/usr/bin/python3
import os
import csv
# Define the mapping of standardized field names to various field names found in the different inventory CSVs
standardized_header_mapping = {
    'Host Name': ['Host Name', 'hostname', 'Name', 'Host'],
    'IP Address': ['IP Address', 'IP', 'IPAddress'],
    'Department': ['Department', 'Dept'],
    'OS': ['OS', 'Operating System'],
    'Function': ['Function']
}
# Create an empty list to store consolidated records
consolidated_records = []
# Specify the file paths for the inventory files
file_paths = [
    "/home/ec2-user/environment/python_programs/yellowtail_fcu.csv",
    "/home/ec2-user/environment/python_programs/yellowtail_fcu.csv",
    "/home/ec2-user/environment/python_programs/yellowtail_national_bank.csv"
]
# Iterate over each file
for file_path in file_paths:
    print(file_path)
    # Check if the file exists
    if not os.path.exists(file_path):
        print(f"Error: File '{file_path}' does not exist.")
        continue
    # Open the CSV file
    with open(file_path, 'r') as csv_file:
        csv_reader = csv.DictReader(csv_file)
        # Iterate over each row in the CSV file
        for row in csv_reader:
            print(row)
            # Modify the record based on standardized header mapping
            modified_record = {}
            for standardized_header, variant_headers in standardized_header_mapping.items():
                for variant_header in variant_headers:
                    if variant_header in row:
                        modified_record[standardized_header] = row[variant_header]
                        break
            # Append the modified record to the list of consolidated records
            consolidated_records.append(modified_record)
# Write the consolidated records to an output CSV file
with open('consolidated_inventory.csv', 'w') as csv_file:
    header_names = standardized_header_mapping.keys()
    writer = csv.DictWriter(csv_file, fieldnames=header_names)
    writer.writeheader()
    for rec in consolidated_records:
        writer.writerow(rec)

